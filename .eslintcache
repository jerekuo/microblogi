[{"C:\\Users\\jere\\microblog\\src\\index.js":"1","C:\\Users\\jere\\microblog\\src\\App.js":"2","C:\\Users\\jere\\microblog\\src\\components\\navbar.component.jsx":"3","C:\\Users\\jere\\microblog\\src\\components\\create-user.component.jsx":"4","C:\\Users\\jere\\microblog\\src\\components\\post-list.component.jsx":"5","C:\\Users\\jere\\microblog\\src\\components\\create-post.component.jsx":"6","C:\\Users\\jere\\microblog\\src\\components\\login-user.component.jsx":"7"},{"size":220,"mtime":1608223201725,"results":"8","hashOfConfig":"9"},{"size":896,"mtime":1608226355605,"results":"10","hashOfConfig":"9"},{"size":1214,"mtime":1608205898478,"results":"11","hashOfConfig":"9"},{"size":2544,"mtime":1608225462511,"results":"12","hashOfConfig":"9"},{"size":1992,"mtime":1608223332807,"results":"13","hashOfConfig":"9"},{"size":2783,"mtime":1608215395244,"results":"14","hashOfConfig":"9"},{"size":2704,"mtime":1608226669079,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"18dxzp6",{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\jere\\microblog\\src\\index.js",[],["32","33"],"C:\\Users\\jere\\microblog\\src\\App.js",["34","35"],"C:\\Users\\jere\\microblog\\src\\components\\navbar.component.jsx",[],"C:\\Users\\jere\\microblog\\src\\components\\create-user.component.jsx",[],"C:\\Users\\jere\\microblog\\src\\components\\post-list.component.jsx",["36"],"import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\n//<Link to={\"/edit/\"+props.exercise._id}>edit</Link> | \r\n//component for post\r\nconst Message = props => (\r\n    <tr>\r\n        <td>{props.message.user}</td>\r\n        <td>{props.message.message}</td>\r\n        <td>\r\n            <a href=\"#\" onClick={() => { props.deleteMessage(props.message._id) }}>delete</a>\r\n\r\n        </td>\r\n    </tr>\r\n)\r\n\r\nexport default class PostList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.deleteMessage = this.deleteMessage.bind(this);\r\n\r\n        this.state = { messages: [] };\r\n    }\r\n    //Load all posts to \"message\" array\r\n    componentDidMount() {\r\n        axios.get('http://localhost:5000/posts/')\r\n            .then(response => {\r\n                this.setState({ messages: response.data })\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n\r\n    deleteMessage(id) {\r\n        axios.delete('http://localhost:5000/posts/' + id)\r\n            .then(res => console.log(res.data));\r\n        this.setState({\r\n            messages: this.state.messages.filter(el => el._id !== id) //remove deleted post from array\r\n        })\r\n    };\r\n\r\n    postList() {\r\n        return this.state.messages.map(currentMessage => {\r\n            return <Message message={currentMessage} deleteMessage={this.deleteMessage} key={currentMessage._id} />;\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3>Wall of Posts</h3>\r\n                <table className=\"table\">\r\n                    <thead className=\"thead-light\">\r\n                        <tr>\r\n                            <th>username</th>\r\n                            <th>message</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.postList()}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}","C:\\Users\\jere\\microblog\\src\\components\\create-post.component.jsx",[],"C:\\Users\\jere\\microblog\\src\\components\\login-user.component.jsx",[],{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":1,"column":17,"nodeType":"43","messageId":"44","endLine":1,"endColumn":25},{"ruleId":"41","severity":1,"message":"45","line":2,"column":8,"nodeType":"43","messageId":"44","endLine":2,"endColumn":13},{"ruleId":"46","severity":1,"message":"47","line":11,"column":13,"nodeType":"48","endLine":11,"endColumn":84},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"no-unused-vars","'setState' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]