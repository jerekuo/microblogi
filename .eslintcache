[{"C:\\Users\\jere\\microblog\\src\\index.js":"1","C:\\Users\\jere\\microblog\\src\\App.js":"2","C:\\Users\\jere\\microblog\\src\\components\\navbar.component.jsx":"3","C:\\Users\\jere\\microblog\\src\\components\\create-user.component.jsx":"4","C:\\Users\\jere\\microblog\\src\\components\\post-list.component.jsx":"5","C:\\Users\\jere\\microblog\\src\\components\\create-post.component.jsx":"6","C:\\Users\\jere\\microblog\\src\\components\\login-user.component.jsx":"7","C:\\Users\\jere\\microblog\\src\\components\\find-post.component.jsx":"8"},{"size":320,"mtime":1608296694340,"results":"9","hashOfConfig":"10"},{"size":1162,"mtime":1608296638239,"results":"11","hashOfConfig":"10"},{"size":1406,"mtime":1608294986156,"results":"12","hashOfConfig":"10"},{"size":2544,"mtime":1608225462511,"results":"13","hashOfConfig":"10"},{"size":2085,"mtime":1608295132865,"results":"14","hashOfConfig":"10"},{"size":4072,"mtime":1608296913453,"results":"15","hashOfConfig":"10"},{"size":2862,"mtime":1608285304666,"results":"16","hashOfConfig":"10"},{"size":3016,"mtime":1608289470302,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"18dxzp6",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"20"},"C:\\Users\\jere\\microblog\\src\\index.js",[],["38","39"],"C:\\Users\\jere\\microblog\\src\\App.js",["40"],"import React, { setState}from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport 'materialize-css/dist/css/materialize.min.css';\nimport 'materialize-css';\nimport './App.css';\n\nimport Navbar from \"./components/navbar.component\";\nimport PostList from \"./components/post-list.component.jsx\";\nimport CreatePost from \"./components/create-post.component.jsx\";\nimport CreateUser from \"./components/create-user.component\";\nimport loginUser from \"./components/login-user.component\";\nimport findPost from \"./components/find-post.component\";\n\n\n\nfunction App() {\n  \n  return (\n    <div className=\"background\">\n      <Router>\n        <div class=\"container-fluid\">\n          <Navbar />\n          <br />\n          <Route path=\"/\" exact component={PostList} />\n          <Route path=\"/createPost\" exact component={CreatePost} />\n          <Route path=\"/createUser\" exact component={CreateUser} />\n          <Route path=\"/loginUser\" exact component={loginUser} />\n          <Route path=\"/findPost\" exact component={findPost} />\n        </div>\n      </Router>\n      </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\jere\\microblog\\src\\components\\navbar.component.jsx",[],"C:\\Users\\jere\\microblog\\src\\components\\create-user.component.jsx",[],"C:\\Users\\jere\\microblog\\src\\components\\post-list.component.jsx",[],"C:\\Users\\jere\\microblog\\src\\components\\create-post.component.jsx",[],"C:\\Users\\jere\\microblog\\src\\components\\login-user.component.jsx",[],["41","42"],"C:\\Users\\jere\\microblog\\src\\components\\find-post.component.jsx",["43"],"import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\n//component for post\r\nconst Message = props => (\r\n    <tr>\r\n        <td>{props.message.user}</td>\r\n        <td>{props.message.message}</td>\r\n        <td>\r\n            <a href=\"#\" onClick={() => { props.deleteMessage(props.message._id) }}>delete</a>\r\n\r\n        </td>\r\n    </tr>\r\n)\r\n\r\nexport default class PostList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onChangeUsername = this.onChangeUsername.bind(this);\r\n\r\n        this.state = { \r\n            username: \"\",\r\n            messages: [] };\r\n    }\r\n    //Load all posts to \"message\" array\r\n    componentDidMount() {\r\n        this.setState({\r\n            username: 'test user'\r\n        })\r\n    }\r\n\r\n\r\n    onChangeUsername(e) {\r\n        this.setState({\r\n            username: e.target.value\r\n        });\r\n    }\r\n\r\n    postList() {\r\n        return this.state.messages.map(currentMessage => {\r\n            return <Message message={currentMessage} deleteMessage={this.deleteMessage} key={currentMessage._id} />;\r\n        })\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        \r\n        \r\n        //input from user\r\n        const user = {\r\n            username: this.state.username,\r\n        }\r\n\r\n        //Get posts from defined username\r\n        axios.post('http://localhost:5000/posts/find', user)\r\n            .then(response => {\r\n                this.setState({ messages: response.data })\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            })\r\n\r\n\r\n        //load posts to \"message\" array\r\n\r\n        console.log(this.state.currentUser +\" ON TÄMÄN HETKINEN KÄYTTÄJÄ!!!\");\r\n\r\n        \r\n        \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3>Find posts by username!</h3>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label>Username: </label>\r\n                        <input type=\"text\"\r\n                            required\r\n                            className=\"form-control\"\r\n                            value={this.state.username}\r\n                            onChange={this.onChangeUsername}\r\n                            />\r\n                    </div>\r\n                    \r\n                    <div className=\"form-group\">\r\n                        <input type=\"submit\" value=\"Search\" className=\"btn btn-primary\"/>\r\n                    </div>\r\n                </form>\r\n                <h3>Posts by username!</h3>\r\n                <table className=\"table\">\r\n                    <thead className=\"thead-transparent\">\r\n                        <tr>\r\n                            <th>username</th>\r\n                            <th>message</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.postList()}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}",{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":1,"column":17,"nodeType":"50","messageId":"51","endLine":1,"endColumn":25},{"ruleId":"44","replacedBy":"52"},{"ruleId":"46","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":10,"column":13,"nodeType":"56","endLine":10,"endColumn":84},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"no-unused-vars","'setState' is defined but never used.","Identifier","unusedVar",["57"],["58"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]